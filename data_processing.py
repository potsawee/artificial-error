### List / Dictionary ###
hesitation_list = \
[# from /home/alta/BLTSpeaking/convert-v2/tools/word_map/hesitation_token.py
    'UH','UMS','UM','UUUHHHH','HUH','HUM',
    'AH','AA','AAAHHH','AAM','AMM','AAMMM',
    'MM','HMM','ER','ERM','ERR','ERRR','EHM',
    'EH','EM','AHEM',
# additional hesitation found in the AMI corpus
    'HM', 'UMM', 'MM-HMM', 'UH-HUH', 'MH',
# additional hesitation found in the Fisher CTS corpus
    'OH', 'UH-HUH', 'UH-OH',
    'ACH', 'EEE', 'EW', 'HEE', 'HA'
]
special_tokens = \
[
"<other>", "<hesitation>", "<disfluency>", "<laugh>",
"<gap>", "<cough>", "<vocal>", "<sigh>", "<singing>",
"<sound>", "<noise>", "<unknown>"
]

special_tokens_cts = \
[
"[noise]", "[laughter]", "[vocalized-noise]"
]

short_form_dict = \
{
    "\\'kay": "okay",
    "\\'em": "them",
    "\\'s": "it's", # note that this could be that's, let's etc as well
                    # but it's seems to be most common in the AMI corpus
    "\\'til": "until",
    "\\'till": "until",
    "\\'cause": "because",
    "\\'ll": "'ll",
    "\\'bout": "about",
    "\\'ve": "'ve",
    "\\'specially": "especially",
    "\\'scuse": "excuse",
    "\\'tis": "it's",
    "\\'fraid": "afraid",
    "\\'round": "around",
    "\\'d": "'d"
}

pw_fisher = \
{
    "-kay": "okay",
    "-em": "them",
    "-bout": "about",
    "-cause": "because",
    "-til": "until",
    "-till": "until",
    "-scuse": "excuse",

}

# glm_short_form_mapping = \
# {
#     "ain't": ['are', 'not'],
#     "'cause'": ['because'],
#     "c'mon": ['come', 'on'],
#     "'em'": ['them'],
#     "gonna": ['going', 'to'],
#     "gotta": ['got', 'to'],
#     "kinda": ['kind', 'of'],
#     "ma'am": ['mam'],
#     "oughta": ['ought', 'to'],
#     "'till'": ['till'],
#     "wanna": ['want', 'to'],
# }


# glm_mapping = \
# {
#     "aren't": ['are', 'not'],
#     "can't": ['can', 'not'],
#     "could've": ['could', 'have'],
#     "didn't": ['did', 'not'],
#     "doesn't": ['does', 'not'],
#     "don't": ['do', 'not'],
#     "hadn't": ['had', 'not'],
#     "hasn't": ['has', 'not'],
#     "haven't": ['have', 'not'],
#     "he'd": ['he', 'had'],
#     "he'll": ['he', 'will'],
#     "he's": ['he', 'is'],
#     "how'd": ['how', 'had'],
#     "how's": ['how', 'is'],
#     "i'd": ['i', 'had'],
#     "i'll": ['i', 'will'],
#     "i'm": ['i', 'am'],
#     "isn't": ['is', 'not'],
#     "it'd": ['it', 'had'],
#     "it'll": ['it', 'will'],
#     "i've": ['i', 'have'],
#     "let's": ['let', 'us'],
#     "must've": ['must', 'have'],
#     "she'd": ['she', 'had'],
#     "she'll": ['she', 'will'],
#     "she's": ['she', 'is'],
#     "shouldn't": ['should', 'not'],
#     "should've": ['should', 'have'],
#     "that'd": ['that', 'had'],
#     "that'll": ['that', 'will'],
#     "that're": ['that', 'are'],
#     "that's": ['that', 'is'],
#     "that've": ['that', 'have'],
#     "that'd": ['that', 'had'],
#     "that'll": ['that', 'will'],
#     "that're": ['that', 'are'],
#     "that's": ['that', 'is'],
#     "that've": ['that', 'have'],
#     "there'd": ['there', 'had'],
#     "there'll": ['there', 'will'],
#     "there're": ['there', 'are'],
#     "there's": ['there', 'has'],
#     "there've": ['there', 'have'],
#     "they'd": ['they', 'had'],
#     "they'll": ['they', 'will'],
#     "they're": ['they', 'are'],
#     "they've": ['they', 'have'],
#     "this'll": ['this', 'will'],
#     "wasn't": ['was', 'not'],
#     "we'd": ['we', 'had'],
#     "we'll": ['we', 'will'],
#     "we've": ['we', 'have'],
#     "we're": ['we', 'are'],
#     "what're": ['what', 'are'],
#     "where're": ['where', 'are'],
#     "who'd": ['who', 'had'],
#     "who'll": ['who', 'will'],
#     "who've": ['who', 'have'],
#     "won't": ['will', 'not'],
#     "wouldn't": ['would', 'not'],
#     "would've": ['would', 'have'],
#     "you'd": ['you', 'had'],
#     "you'll": ['you', 'will'],
#     "you're": ['you', 'are'],
#     "you've": ['you', 'have'],
#     "that're": ['that', 'are'],
#     "that's": ['that', 'is'],
#     "that've": ['that', 'have'],
#     "there'd": ['there', 'had'],
#     "there'll": ['there', 'will'],
#     "there're": ['there', 'are'],
#     "there's": ['there', 'is'],
#     "there've": ['there', 'have'],
#     "they'd": ['they', 'had'],
#     "they'll": ['they', 'will'],
#     "they're": ['they', 'are'],
#     "they've": ['they', 'have'],
#     "this'll": ['this', 'will'],
#     "wasn't": ['was', 'not'],
#     "we'd": ['we', 'had'],
#     "we'll": ['we', 'will'],
#     "we've": ['we', 'have'],
#     "what're": ['what', 'are'],
#     "where're": ['where', 'are'],
#     "who'd": ['who', 'had'],
#     "who'll": ['who', 'will'],
#     "who've": ['who', 'have'],
#     "won't": ['will', 'not'],
#     "wouldn't": ['would', 'not'],
#     "would've": ['would', 'have'],
#     "you'd": ['you', 'had'],
#     "you'll": ['you', 'will'],
#     "you're": ['you', 'are'],
#     "you've": ['you', 'have'],
#     "why'd": ['why', 'did'],
#     "y'all": ['you', 'all'],
#     "who're": ['who', 'are'],
# }

# /home/alta/CLC/LNRC/lib/corrs/map_clc.txt
# use /home/alta/BLTSpeaking/ged-pm574/artificial-error/scripts/mapping/map2pydict.py
# to convert the original text file to the following Python dict and then copy&paste
# e.g. python3 map2pydict.py
glm_mapping_kmk = \
{
"he'd": ['he', 'had'],
"how'd": ['how', 'had'],
"i'd": ['i', 'had'],
"it'd": ['it', 'had'],
"she'd": ['she', 'had'],
"that'd": ['that', 'had'],
"there'd": ['there', 'had'],
"they'd": ['they', 'had'],
"we'd": ['we', 'had'],
"who'd": ['who', 'had'],
"you'd": ['you', 'had'],
"he'll": ['he', 'will'],
"i'll": ['i', 'will'],
"it'll": ['it', 'will'],
"she'll": ['she', 'will'],
"that'll": ['that', 'will'],
"there'll": ['there', 'will'],
"they'll": ['they', 'will'],
"things'll": ['things', 'will'],
"this'll": ['this', 'will'],
"we'll": ['we', 'will'],
"what'll": ['what', 'will'],
"who'll": ['who', 'will'],
"you'll": ['you', 'will'],
"she/he'll": ['she', 'or'],
"computers'll": ['computers', 'will'],
"y'all": ['you', 'all'],
"c'mon": ['come', 'on'],
"i'm": ['i', 'am'],
"ain't": ['are', 'not'],
"aren't": ['are', 'not'],
"can't": ['can', 'not'],
"couldn't": ['could', 'not'],
"couln't": ['could', 'not'],
"didn't": ['did', 'not'],
"doesn't": ['does', 'not'],
"don't": ['do', 'not'],
"don'ts": ['do', 'nots'],
"isn't": ['is', 'not'],
"hadn't": ['had', 'not'],
"hasn't": ['has', 'not'],
"haven't": ['have', 'not'],
"isn't": ['is', 'not'],
"mightn't": ['might', 'not'],
"mustn't": ['must', 'not'],
"needn't": ['need', 'not'],
"oughtn't": ['ought', 'not'],
"shouldn't": ['should', 'not'],
"wasn't": ['was', 'not'],
"weren't": ['were', 'not'],
"won't": ['will', 'not'],
"wouldn't": ['would', 'not'],
"how're": ['how', 'are'],
"here're": ['here', 'are'],
"that're": ['that', 'are'],
"there're": ['there', 'are'],
"they're": ['they', 'are'],
"we're": ['we', 'are'],
"what're": ['what', 'are'],
"where're": ['where', 'are'],
"who're": ['who', 'are'],
"we're": ['we', 'are'],
"you're": ['you', 'are'],
"he's": ['he', 'is'],
"here's": ['here', 'is'],
"how's": ['how', 'is'],
"it's": ['it', 'is'],
"let's": ['let', 'us'],
"she's": ['she', 'is'],
"that's": ['that', 'is'],
"there's": ['there', 'is'],
"what's": ['what', 'is'],
"where's": ['where', 'is'],
"who's": ['who', 'is'],
"why's": ['why', 'is'],
"you's": ['you', 'is'],
"1300's": ['thirteen', "thousand's"],
"1900's": ['nineteen', "hundred's"],
"1950's": ['nineteen', 'fifties'],
"1970's": ['nineteen', 'seventies'],
"1980's": ['nineteen', 'eighties'],
"2000's": ['two', 'thousands'],
"1990's": ['nineteen', 'nineties'],
"1960's": ['nineteen', 'sixties'],
"1920's": ['nineteen', 'twenties'],
"torhout/werchter's": ['torhout', 'or'],
"could've": ['could', 'have'],
"i've": ['i', 'have'],
"it've": ['it', 'have'],
"might've": ['might', 'have'],
"must've": ['must', 'have'],
"should've": ['should', 'have'],
"that've": ['that', 'have'],
"there've": ['there', 'have'],
"they've": ['they', 'have'],
"we've": ['we', 'have'],
"who've": ['who', 'have'],
"would've": ['would', 'have'],
"you've": ['you', 'have'],
"£10/year": ['ten', 'pounds'],
"1/": ['one', '/'],
"24/7": ['twenty', 'four'],
"29/october/1988": ['twenty', 'nine'],
"2/hour": ['two', 'per'],
"2/": ['two', '/'],
"3/": ['three', '/'],
"3/xanadu": ['three', '/'],
"4/article": ['four', '/'],
"£60/week": ['sixty', 'pounds'],
"£70/week": ['seventy', 'pounds'],
"7/june": ['seven', 'june'],
"a/": ['a', '/'],
"ac/dc": ['ac', 'dc'],
"actress/actor": ['actress', 'or'],
"/ae/": ['/', 'ae'],
"africa/asia": ['africa', 'or'],
"afternoon/evening": ['afternoon', 'or'],
"aims/objectives": ['aims', 'or'],
"airport/central": ['airport', 'central'],
"and/or": ['and', 'or'],
"arrange/follow": ['arrange', 'or'],
"article/report": ['article', 'or'],
"attica/greece": ['attica', 'greece'],
"austrian/tyrolean": ['austrian', 'tyrolean'],
"balmes/trevesera": ['balmes', 'trevesera'],
"b/": ['b', '/'],
"bf/person": ['bf', 'per'],
"billete/tickets/information": ['billete', 'or'],
"birthday/anniversary/etc": ['birthday', 'or'],
"books/newspapers": ['books', 'or'],
"books/tapes": ['books', 'or'],
"boyfriend/girlfriend": ['boyfriend', 'or'],
"boy/girl": ['boy', 'or'],
"buses/": ['buses', '/'],
"bus/taxi": ['bus', 'or'],
"/busy": ['/', 'busy'],
"cad/cam": ['cad', 'cam'],
"c/bertrain": ['c', 'bertrain'],
"c/fuente": ['c', 'fuente'],
"christmas/": ['christmas', '/'],
"city/": ['city', '/'],
"c/j": ['c', '/'],
"c/la": ['c', '/'],
"clips/person": ['clips', 'per'],
"club/cfc": ['club', 'cfc'],
"c/nicaragua": ['c', 'nicaragua'],
"coach/car": ['coach', 'or'],
"c/o": ['care', 'of'],
"coins/per": ['coins', 'per'],
"com/is/": ['com', '/'],
"concern/in": ['concern', 'or'],
"controlling/accounting": ['controlling', 'or'],
"correction/": ['correction', '/'],
"culture/cultures": ['culture', 'or'],
"c/vincente": ['c', 'vincente'],
"dance/house": ['dance', 'or'],
"delay/breakdown": ['delay', 'or'],
"doctors/nurses": ['doctors', 'or'],
"documents/material": ['documents', 'or'],
"edinburgh/st": ['edinburgh', 'st'],
"/e/": ['/', 'e'],
"electrical/": ['electrical', '/'],
"electrical/gas": ['electrical', 'or'],
"facilities/locations": ['facilities', 'or'],
"father/mother": ['father', 'or'],
"film/book": ['film', 'or'],
"football/basketball": ['football', 'or'],
"frankfurt/main": ['frankfurt', 'main'],
"/frida": ['/', 'frida'],
"from/to": ['from', 'or'],
"fruit/veg": ['fruit', 'or'],
"gas/electrical": ['gas', 'or'],
"gas/power": ['gas', 'or'],
"girl/boy": ['girl', 'or'],
"good/adequate/needs": ['good', 'or'],
"/greasy": ['/', 'greasy'],
"growth/learning": ['growth', 'or'],
"he/her": ['he', 'or'],
"here/": ['here', '/'],
"her/him": ['her', 'or'],
"her/his": ['her', 'or'],
"he/she": ['he', 'or'],
"him/her": ['him', 'or'],
"him/herself": ['himself', 'or'],
"him/": ['him', '/'],
"himself/herself": ['himself', 'or'],
"his/her": ['his', 'or'],
"his/": ['his', '/'],
"horgen/switzerland": ['horgen', 'switzerland'],
"hot/cold": ['hot', 'or'],
"hotels/stations": ['hotels', 'or'],
"hours/day": ['hours', 'per'],
"hours/week": ['hours', 'per'],
"house/flat": ['house', 'or'],
"housing/employment": ['housing', 'or'],
"how/what": ['how', 'or'],
"husband/wife": ['husband', 'or'],
"ideas/improvements": ['ideas', 'or'],
"/i": ['/', '/'],
"/i/": ['/', 'i'],
"indoors/outdoors": ['indoors', 'or'],
"information/tickets": ['information', 'or'],
"in/out": ['in', 'or'],
"intermediate/fluent": ['intermediate', 'or'],
"jobs/accommodation": ['jobs', 'or'],
"kitchen/room": ['kitchen', 'slash'],
"koln/bonn": ['koln', 'bonn'],
"language/second": ['language', 'per'],
"lessons/": ['lessons', '/'],
"lessons/sports": ['lessons', 'or'],
"letter/invitation": ['letter', 'or'],
"listener/viewer": ['listener', 'or'],
"lived/dressed": ['lived', 'or'],
"location/": ['location', '/'],
"luck/bad": ['luck', 'or'],
"/madam": ['or', 'madam'],
"madam/sir": ['madam', 'or'],
"madam/sir": ['madam', 'sir'],
"magazines/library": ['magazines', 'or'],
"manager/": ['manager', '/'],
"man/woman": ['man', 'or'],
"/maria": ['/', 'maria'],
"martinez/international": ['martinez', 'international'],
"meat/fish": ['meat', 'or'],
"milano/malpensa": ['milano', 'malpensa'],
"mother/father": ['mother', 'or'],
"mr/dear": ['mr', 'or'],
"mr/madam": ['mr', 'or'],
"mr/mrs": ['mr', 'or'],
"mrs/mr": ['mrs', 'or'],
"/mrs": ['or', 'mrs'],
"/ms": ['or', 'ms'],
"my/our": ['my', 'or'],
"on/off": ['on', 'or'],
"or/and": ['or', 'and'],
"organise/plan": ['organise', 'or'],
"orientation/direction": ['orientation', 'or'],
"/orientation": ['/', 'orientation'],
"park/what": ['park', 'or'],
"/passport": ['/', 'passport'],
"pop/hard": ['pop', 'or'],
"pop/rock": ['pop', 'or'],
"printers/fax": ['printers', 'or'],
"product/products": ['product', 'or'],
"programmes/activities": ['programmes', 'or'],
"quicker/easier": ['quicker', 'or'],
"r/c": ['r', 'or'],
"read/watch": ['read', 'or'],
"/realised": ['/', 'realised'],
"reasons/matters": ['reasons', 'or'],
"reinad/bl": ['reinad', 'bl'],
"/remedos": ['/', 'remedos'],
"rock/pop": ['rock', 'or'],
"room/shower": ['room', 'or'],
"rose/pink": ['rose', 'or'],
"santos/sos": ['santos', 'or'],
"school/work": ['school', 'or'],
"sek/person": ['swedish', 'krona'],
"send/receive": ['send', 'or'],
"services/facilities": ['services', 'or'],
"/seventy": ['/', 'seventy'],
"sfr/week": ['swiss', 'francs'],
"she/he'll": ['she', 'or'],
"she/he": ['she', 'or'],
"s/he": ['she', 'or'],
"should/could": ['should', 'or'],
"sightseeing/teaching": ['sightseeing', 'or'],
"sindos/": ['sindos', '/'],
"single/double": ['single', 'or'],
"sir/madam": ['sir', 'or'],
"sir/manager": ['sir', 'or'],
"/sir": ['or', 'sir'],
"sir/": ['sir', '/'],
"sirs/madames": ['sirs', 'or'],
"sirs/madam": ['sirs', 'or'],
"sirs/madams": ['sirs', 'or'],
"sirs/": ['sirs', '/'],
"skills/qualities": ['skills', 'or'],
"/social": ['/', 'social'],
"socrates/erasmus": ['socrates', 'or'],
"someone/something": ['someone', 'or'],
"sons/daughters": ['sons', 'or'],
"spending/wasting": ['spending', 'or'],
"sportmen/women": ['sportmen', 'or'],
"sports/health": ['sports', 'or'],
"street/": ['street', '/'],
"students/public": ['students', 'or'],
"subway/tube": ['subway', 'or'],
"teachers/instructors": ['teachers', 'or'],
"tel.no.0042/736": ['telephone', 'number'],
"/the": ['/', 'the'],
"three/four": ['three', 'or'],
"torhout/werchter's": ['torhout', 'or'],
"torhout/werchter": ['torhout', 'or'],
"to/": ['to', '/'],
"training/lipton": ['training', 'or'],
"travel/accommodation": ['travel', 'or'],
"trip/music": ['trip', 'or'],
"tuition/training": ['tuition', 'or'],
"/u2": ['/', 'u2'],
"usa/month": ['usa', 'per'],
"valalance/baise": ['valalance', 'or'],
"valence/baise": ['valence', 'or'],
"/valid": ['/', 'valid'],
"waiters/waitresses": ['waiters', 'or'],
"waiter/waitress": ['waiter', 'or'],
"wallet/pocket": ['wallet', 'or'],
"washer/dryer": ['washer', 'or'],
"was/is": ['was', 'or'],
"watch/listen": ['watch', 'or'],
"were/are": ['were', 'or'],
"woman/wife": ['woman', 'or'],
"//www": ['//', 'www'],
"xviii/xix": ['eighteen', 'or'],
"/xxxx": ['/', 'xxxx'],
"zumikon/ch/home/dawna/mgb3/transcription/scoring/lib/glms/en20150331mgb.glm": ['zumikon', 'ch'],
"100": ['one', 'hundred'],
"200": ['two', 'hundred'],
"250": ['two', 'hundred'],
"300": ['three', 'hundred'],
"400": ['four', 'hundred'],
"500": ['five', 'hundred'],
"600": ['six', 'hundred'],
"700": ['seven', 'hundred'],
"800": ['eight', 'hundred'],
"1000": ['one', 'thousand'],
"3000": ['three', 'thousand'],
"4000": ['four', 'thousand'],
"5000": ['five', 'thousand'],
"21st": ['twenty', 'first'],
"22nd": ['twenty', 'second'],
"23rd": ['twenty', 'third'],
"24th": ['twenty', 'fourth'],
"25th": ['twenty', 'fifth'],
"26th": ['twenty', 'sixth'],
"27th": ['twenty', 'seventh'],
"28th": ['twenty', 'eighth'],
"29th": ['twenty', 'ninth'],
"31st": ['thirty', 'first'],
"1920s": ['nineteen', 'twenties'],
"1950s": ['nineteen', 'fifties'],
"1960s": ['nineteen', 'sixties'],
"1970s": ['nineteen', 'seventies'],
"1980s": ['nineteen', 'eighties'],
"1821": ['eighteen', 'twenty'],
"1980": ['nineteen', 'eighty'],
"1990": ['nineteen', 'ninety'],
"1992": ['nineteen', 'ninety'],
"1993": ['nineteen', 'ninety'],
"1997": ['nineteen', 'ninety'],
"1998": ['nineteen', 'ninety'],
"1999": ['nineteen', 'ninety'],
"2000": ['two', 'thousand'],
"2001": ['two', 'thousand'],
"2002": ['two', 'thousand'],
"2003": ['two', 'thousand'],
"2004": ['two', 'thousand'],
"2005": ['two', 'thousand'],
"2006": ['two', 'thousand'],
"2007": ['two', 'thousand'],
"2008": ['two', 'thousand'],
"1%": ['one', 'percent'],
"2%": ['two', 'percent'],
"3%": ['three', 'percent'],
"4%": ['four', 'percent'],
"5%": ['five', 'percent'],
"7%": ['seven', 'percent'],
"8%": ['eight', 'percent'],
"10%": ['ten', 'percent'],
"15%": ['fifteen', 'percent'],
"20%": ['twenty', 'percent'],
"22%": ['twenty', 'two'],
"25%": ['twenty', 'five'],
"26%": ['twenty', 'sixth'],
"30%": ['thirty', 'percent'],
"33%": ['thirty', 'three'],
"34%": ['thirty', 'four'],
"35%": ['thirty', 'five'],
"37%": ['thirty', 'seven'],
"40%": ['forty', 'percent'],
"42%": ['forty', 'two'],
"45%": ['forty', 'five'],
"46%": ['firty', 'six'],
"50%": ['fifty', 'percent'],
"52%": ['fifty', 'two'],
"60%": ['sixty', 'percent'],
"65%": ['sixty', 'five'],
"70%": ['seventy', 'percent'],
"73%": ['seventy', 'three'],
"75%": ['seventy', 'five'],
"78%": ['seventy', 'eight'],
"80%": ['eighty', 'percent'],
"85%": ['eighty', 'five'],
"88%": ['eighty', 'eight'],
"90%": ['ninety', 'percent'],
"95%": ['ninety', 'five'],
"97%": ['ninety', 'seven'],
"98%": ['ninety', 'eight'],
"99%": ['ninety', 'nine'],
"100%": ['one', 'hundred'],
"105%": ['one', 'hundred'],
"1am": ['one', 'am'],
"1pm": ['one', 'pm'],
"1a.m": ['one', 'am'],
"1p.m": ['one', 'pm'],
"1a.m.": ['one', 'a.m.'],
"1p.m.": ['one', 'p.m.'],
"2am": ['two', 'am'],
"2pm": ['two', 'pm'],
"2a.m": ['two', 'am'],
"2p.m": ['two', 'pm'],
"2a.m.": ['two', 'a.m.'],
"2p.m.": ['two', 'p.m.'],
"3am": ['three', 'am'],
"3pm": ['three', 'pm'],
"3a.m": ['three', 'am'],
"3p.m": ['three', 'pm'],
"3a.m.": ['three', 'a.m.'],
"3p.m.": ['three', 'p.m.'],
"4am": ['four', 'am'],
"4pm": ['four', 'pm'],
"4am": ['four', 'am'],
"4p.m": ['four', 'pm'],
"5a.m": ['five', 'am'],
"4a.m.": ['four', 'a.m.'],
"4p.m.": ['four', 'p.m.'],
"5pm": ['five', 'pm'],
"5a.m": ['five', 'am'],
"5p.m": ['five', 'pm'],
"5a.m.": ['five', 'am.'],
"5p.m.": ['five', 'pm.'],
"6am": ['six', 'am'],
"6pm": ['six', 'pm'],
"6a.m": ['six', 'am'],
"6p.m": ['six', 'pm'],
"6a.m.": ['six', 'a.m.'],
"6p.m.": ['six', 'p.m.'],
"7am": ['seven', 'am'],
"7pm": ['seven', 'pm'],
"7a.m": ['seven', 'am'],
"7p.m": ['seven', 'pm'],
"7a.m.": ['seven', 'a.m.'],
"7p.m.": ['seven', 'p.m.'],
"8am": ['eight', 'am'],
"8pm": ['eight', 'pm'],
"8a.m": ['eight', 'am'],
"8p.m": ['eight', 'pm'],
"8a.m.": ['eight', 'a.m.'],
"8p.m.": ['eight', 'p.m.'],
"9am": ['nine', 'am'],
"9pm": ['nine', 'pm'],
"9a.m": ['nine', 'am'],
"9p.m": ['nine', 'pm'],
"9a.m.": ['nine', 'a.m.'],
"9p.m.": ['nine', 'p.m.'],
"10am": ['ten', 'am'],
"10pm": ['ten', 'pm'],
"10a.m": ['ten', 'am'],
"10p.m": ['ten', 'pm'],
"10a.m.": ['ten', 'a.m.'],
"10p.m.": ['ten', 'p.m.'],
"11am": ['eleven', 'am'],
"11pm": ['eleven', 'pm'],
"11a.m": ['eleven', 'am'],
"11p.m": ['eleven', 'pm'],
"11a.m.": ['eleven', 'a.m.'],
"11p.m.": ['eleven', 'p.m.'],
"12am": ['twelve', 'am'],
"12pm": ['twelve', 'pm'],
"12a.m": ['twelve', 'am'],
"12p.m": ['twelve', 'pm'],
"12a.m.": ['twelve', 'a.m.'],
"12p.m.": ['twelve', 'p.m.'],
"13pm": ['thirteen', 'pm'],
"13p.m": ['thirteen', 'pm'],
"13p.m.": ['thirteen', 'p.m.'],
"14pm": ['fourteen', 'pm'],
"14p.m": ['fourteen', 'pm'],
"14p.m.": ['fourteen', 'p.m.'],
"15pm": ['fifteen', 'pm'],
"15p.m": ['fifteen', 'pm'],
"15p.m.": ['fifteen', 'p.m.'],
"16pm": ['sixteen', 'pm'],
"16p.m": ['sixteen', 'pm'],
"16p.m.": ['sixteen', 'p.m.'],
"17pm": ['seventeen', 'pm'],
"17p.m": ['seventeen', 'pm'],
"17p.m.": ['seventeen', 'p.m.'],
"18pm": ['eighteen', 'pm'],
"18p.m": ['eighteen', 'pm'],
"18p.m.": ['eighteen', 'p.m.'],
"19pm": ['nineteen', 'pm'],
"19p.m": ['nineteen', 'pm'],
"19p.m.": ['nineteen', 'p.m.'],
"20pm": ['twenty', 'pm'],
"20p.m": ['twenty', 'pm'],
"20p.m.": ['twenty', 'p.m.'],
"21pm": ['twenty', 'one'],
"21p.m": ['twenty', 'one'],
"21p.m.": ['twenty', 'one'],
"22pm": ['twenty', 'two'],
"22p.m": ['twenty', 'two'],
"22p.m.": ['twenty', 'two'],
"23pm": ['twenty', 'three'],
"23p.m": ['twenty', 'three'],
"23p.m.": ['twenty', 'three'],
"24pm": ['twenty', 'four'],
"24p.m": ['twenty', 'four'],
"24p.m.": ['twenty', 'four'],
"1:30": ['one', 'thirty'],
"2p.m.": ['two', 'p.m.'],
"2:30": ['two', 'thirty'],
"3:30": ['three', 'thirty'],
"4:30": ['four', 'thirty'],
"04.45": ['four', 'forty'],
"5p.m.": ['five', 'p.m.'],
"6.00a.m.": ['six', 'a.m.'],
"6:00a.m.": ['six', 'a.m.'],
"6:30": ['six', 'thirty'],
"6.30p.m.": ['six', 'thirty'],
"6:30pm": ['six', 'thirty'],
"7:00am": ['seven', 'am'],
"8a.m.": ['eight', 'a.m.'],
"8:30": ['eight', 'thirty'],
"9:00am": ['nine', 'am'],
"9:30": ['nine', 'thirty'],
"10.15": ['ten', 'fifteen'],
"10:30": ['ten', 'thirty'],
"11:30": ['eleven', 'thirty'],
"12.15": ['twelve', 'fifteen'],
"12:30": ['twelve', 'thirty'],
"13:30": ['thirteen', 'thirty'],
"13:00": ['thirteen', 'oh'],
"14:30": ['fourteen', 'thirty'],
"15:00": ['fifteen', 'hundred'],
"15:30": ['fifteen', 'thirty'],
"17:00": ['seventeen', 'hundred'],
"18:00": ['eighteen', 'hundred'],
"19:30": ['nineteen', 'thirty'],
"20:00": ['twenty', 'hundred'],
"20:30": ['twenty', 'thirty'],
"30pm": ['thirty', 'pm'],
"00pm": ['oh', 'oh'],
"10km": ['ten', 'km'],
"2hr": ['two', 'hours'],
"3km": ['three', 'kilometre'],
"8km": ['eight', 'km'],
"2:2": ['two', ':'],
"3:2": ['three', ':'],
"£1.50": ['one', 'pound'],
"50m": ['fifty', 'metres'],
"#1": ['number', 'one'],
"no5": ['number', 'five'],
"no.1": ['number', 'one'],
"l.200": ['two', 'hundred'],
"c.50": ['c', '50'],
"10m2": ['10', 'metre'],
"10fr": ['10', 'francs'],
"10c": ['ten', 'cents'],
"106vevey": ['106', 'vevey'],
"100£": ['one', 'hundred'],
"100ff": ['one', 'hundred'],
"1000l": ['one', 'thousand'],
"0°c": ['0', 'degrees'],
"10£": ['ten', 'pounds'],
"10€": ['ten', 'euors'],
"1£": ['one', 'pound'],
"1$": ['one', 'dollar'],
"1": ['one', ''],
"+34": ['plus', '34'],
"32km": ['32', 'km'],
"35°c": ['35', 'degrees'],
"4500€": ['4500', 'euros'],
"5mm": ['five', 'mm'],
"5km": ['five', 'km'],
"45mins": ['forty', 'five']
}


# ------ US => UK spelling ------ #
path_to_us = "/home/alta/BLTSpeaking/ged-pm574/artificial-error/lib/wlists/us_spellings.txt"
path_to_uk = "/home/alta/BLTSpeaking/ged-pm574/artificial-error/lib/wlists/uk_spellings.txt"
us_to_uk_dict = {}
uk_to_us_dict = {}
with open(path_to_us, 'r') as file:
    us_wlist = file.readlines()
with open(path_to_uk, 'r') as file:
    uk_wlist = file.readlines()
for us_word, uk_word in zip(us_wlist, uk_wlist):
    us_to_uk_dict[us_word.strip()] = uk_word.strip()
for us_word, uk_word in zip(us_wlist, uk_wlist):
    uk_to_us_dict[uk_word.strip()] = us_word.strip()


def is_hesitation(token):

    if token.upper() in hesitation_list:
        return True
    else:
        return False

def is_special_token(token):

    if token in special_tokens:
        return True
    else:
        return False

def convert_short_form(token):
    if token not in short_form_dict:
        return "<unknown>"
    else:
        return short_form_dict[token]

def us_to_uk_spelling(word):
    if word in us_to_uk_dict:
        print("US_to_UK: {} => {}".format(word, us_to_uk_dict[word]))
        return us_to_uk_dict[word]
    else:
        return word

def split_word(word):
    if "'" in word:
        if "n't" in word:
            i = word.index("'") - 1
            w1 = word[:i]
            w2 = word[i:]
            return [w1,w2]
        else:
            i = word.index("'")
            w1 = word[:i]
            w2 = word[i:]
            if w1 != "'" and w2 != "'":
                return [w1,w2]
            else:
                return word.strip("'")
    else:
        return

def glm_like_split_word(word):
    if "'" in word:
        if "'ll'" in word:
            i = word.index("'") - 1
            w1 = word[:i]
            w2 = word[i:]
            return [w1,w2]
        else:
            i = word.index("'")
            w1 = word[:i]
            w2 = word[i:]
            if w1 != "'" and w2 != "'":
                return [w1,w2]
            else:
                return word.strip("'")
    else:
        return




#### CTS Functions ####
def is_special_token_cts(token):

    if token in special_tokens_cts:
        return True
    else:
        return False

#### Fisher Functions ####
def keep_pw_fisher(token):
    if token in pw_fisher:
        return pw_fisher[token]
    else:
        return "<partial>"
